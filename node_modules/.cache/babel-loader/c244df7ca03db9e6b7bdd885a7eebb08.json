{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\serviceagency\\\\services\\\\View.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Form, Row } from 'react-bootstrap';\nimport results from '../../../../results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst View = () => {\n  _s();\n\n  const [hasQuery, setHasQuery] = useState(false);\n  const [services, setServices] = useState([]);\n  const [serviceQuery, setServiceQuery] = useState();\n  const [queryID, setQueryID] = useState('default');\n  const [agencies, setAgencies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const serviceList = [];\n    results.get('/services.json').then(function (response) {\n      for (let key in response.data) {\n        serviceList.unshift({\n          id: key,\n          name: response.data[key].serviceName\n        });\n      }\n    }).then(function () {\n      setServices(serviceList);\n    });\n  }, []);\n\n  function getAgencies() {\n    return results.get('/users/serviceagency.json');\n  }\n\n  function getServices(ID) {\n    return results.get('/services/' + ID + '/.json');\n  }\n\n  function handleApply(e) {\n    e.preventDefault();\n    setHasQuery(false);\n    setLoading(true);\n    const agencyList = [];\n\n    if (queryID !== 'default') {\n      Promise.all([getAgencies(), getServices(queryID)]).then(function (response) {\n        for (let key in response[1].data) {\n          if (response[0].data[key]) console.log(response[0].data[key].companyName + ': ' + response[1].data[key].availability);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3 p-3\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      sm: 1,\n      md: 2,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mt-3\",\n              children: \"View Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"p-3 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                \"aria-label\": \"Default select example\",\n                onChange: e => setQueryID(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"default\",\n                  children: \"Select Service Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: service.id,\n                  children: service.name\n                }, service.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ps-3 mt-3 d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  style: {\n                    minWidth: '150px'\n                  },\n                  onClick: e => setHasQuery(false),\n                  disabled: !hasQuery,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  style: {\n                    minWidth: '150px'\n                  },\n                  onClick: handleApply,\n                  children: \"Apply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), hasQuery && !loading && /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-danger text-white\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: [\"Services: \", serviceQuery]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: agencies.map(agency => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: agency.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: agency.availability\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this)]\n              }, agency.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(View, \"XlUBqTlNZeZVQjYB7pfaiHii87w=\");\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/serviceagency/services/View.js"],"names":["React","useEffect","useState","Button","Card","Col","Container","Form","Row","results","View","hasQuery","setHasQuery","services","setServices","serviceQuery","setServiceQuery","queryID","setQueryID","agencies","setAgencies","loading","setLoading","serviceList","get","then","response","key","data","unshift","id","name","serviceName","getAgencies","getServices","ID","handleApply","e","preventDefault","agencyList","Promise","all","console","log","companyName","availability","target","value","map","service","minWidth","agency"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport results from '../../../../results'\r\n\r\nconst View = () => {\r\n\r\n    const [hasQuery, setHasQuery] = useState(false)\r\n    const [services, setServices] = useState([])\r\n    const [serviceQuery, setServiceQuery] = useState()\r\n    const [queryID, setQueryID] = useState('default')\r\n    const [agencies, setAgencies] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const serviceList = []\r\n        results.get('/services.json')\r\n            .then(function (response) {\r\n                for (let key in response.data) {\r\n                    serviceList.unshift(\r\n                        {\r\n                            id: key,\r\n                            name: response.data[key].serviceName\r\n                        }\r\n                    )\r\n                }\r\n            }).then(function () {\r\n                setServices(serviceList)\r\n            })\r\n    }, [])\r\n\r\n    function getAgencies() {\r\n        return results.get('/users/serviceagency.json')\r\n    }\r\n\r\n    function getServices(ID) {\r\n        return results.get('/services/'+ID+'/.json')\r\n    }\r\n\r\n    function handleApply(e) {\r\n        e.preventDefault()\r\n        setHasQuery(false)\r\n        setLoading(true)\r\n        const agencyList = []\r\n        if (queryID !== 'default') {\r\n            Promise.all([getAgencies(), getServices(queryID)])\r\n                .then(function(response){\r\n                    for(let key in response[1].data) {\r\n                        if(response[0].data[key])\r\n                        console.log(response[0].data[key].companyName+': '+response[1].data[key].availability)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='mt-3 p-3'>\r\n            <Row xs={1} sm={1} md={2}>\r\n                <Col className='mb-3'>\r\n                    <Card>\r\n                        <Container>\r\n                            <h1 className='mt-3'>View Services</h1>\r\n                            <Form className='p-3 mb-3'>\r\n                                <Form.Select\r\n                                    aria-label=\"Default select example\"\r\n                                    onChange={(e) => setQueryID(e.target.value)}\r\n                                >\r\n                                    <option value='default'>Select Service Type</option>\r\n                                    {services.map((service) =>\r\n                                        <option key={service.id} value={service.id}>{service.name}</option>\r\n                                    )}\r\n                                </Form.Select>\r\n\r\n                                <div className='ps-3 mt-3 d-flex justify-content-between'>\r\n                                    <Button\r\n                                        variant='light'\r\n                                        style={{ minWidth: '150px' }}\r\n                                        onClick={(e) => setHasQuery(false)}\r\n                                        disabled={!hasQuery}\r\n                                    >\r\n                                        Reset\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        variant='success'\r\n                                        style={{ minWidth: '150px' }}\r\n                                        onClick={handleApply}\r\n                                    >\r\n                                        Apply\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        </Container>\r\n                    </Card>\r\n                </Col>\r\n\r\n                {hasQuery && !loading && <Col>\r\n                    <Card>\r\n                        <Card className='bg-danger text-white'>\r\n                            <Card.Header>\r\n                                Services: {serviceQuery}\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {agencies.map((agency) =>\r\n                                    <div className='d-flex justify-content-between'\r\n                                        key={agency.name}\r\n                                    >\r\n                                        <span>{agency.name}</span>\r\n                                        <span>{agency.availability}</span>\r\n                                    </div>\r\n                                )}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Card>\r\n                </Col>}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View"]},"metadata":{},"sourceType":"module"}