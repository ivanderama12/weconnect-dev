{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail, updateProfile } from \"firebase/auth\";\nimport { auth } from './firebase';\nimport results from './results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [isAgency, setIsAgency] = useState(false); // const [userDetails, setUserDetails] = useState({})\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function reset(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  function updateprofile(name, url) {\n    return updateProfile(currentUser, {\n      displayName: name,\n      photoURL: url\n    });\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function setisagency(param) {\n    return setIsAgency(param);\n  } // function getUserAgency(user) {\n  //     return results.get('/users/serviceagency/' + user.uid + '.json')\n  // }\n  // function getUserEstablishment(user) {\n  //     return results.get('/users/establishment/' + user.uid + '.json')\n  // }\n\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false); // Promise.all([getUserAgency(user), getUserEstablishment(user)])\n      //     .then(function (results) {\n      //         const sa = results[0]\n      //         const est = results[1]\n      //         if (sa.data !== null) {\n      //             const name = sa.data\n      //             setUserName(name)\n      //         } else {\n      //             const name = est.data.userName\n      //             setUserName(name)\n      //         }\n      //         console.log(userName)\n      //     })\n    });\n    return unsubscribe;\n  }, [currentUser]);\n  const value = {\n    isAgency,\n    currentUser,\n    setisagency,\n    signup,\n    login,\n    logout,\n    updateprofile,\n    reset\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AuthProvider, \"iZEjzxFSNePZLk1RGPLapKPOq68=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/AuthContext.js"],"names":["React","useContext","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","updateProfile","auth","results","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","isAgency","setIsAgency","signup","email","password","login","reset","updateprofile","name","url","displayName","photoURL","logout","setisagency","param","unsubscribe","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,EAAqEC,OAArE,EAA8EC,kBAA9E,EAAkGC,sBAAlG,EAA0HC,aAA1H,QAA+I,eAA/I;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,WAAW,gBAAGZ,KAAK,CAACa,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAOb,UAAU,CAACW,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAEvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,EAA9C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC,CAJuC,CAKvC;;AAEA,WAASoB,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,WAAOrB,8BAA8B,CAACM,IAAD,EAAOc,KAAP,EAAcC,QAAd,CAArC;AACH;;AAED,WAASC,KAAT,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,WAAOpB,0BAA0B,CAACK,IAAD,EAAOc,KAAP,EAAcC,QAAd,CAAjC;AACH;;AAED,WAASE,KAAT,CAAeH,KAAf,EAAsB;AAClB,WAAOhB,sBAAsB,CAACE,IAAD,EAAOc,KAAP,CAA7B;AACH;;AAED,WAASI,aAAT,CAAuBC,IAAvB,EAA6BC,GAA7B,EAAkC;AAC9B,WAAOrB,aAAa,CAACQ,WAAD,EAAc;AAC9Bc,MAAAA,WAAW,EAAEF,IADiB;AAE9BG,MAAAA,QAAQ,EAAEF;AAFoB,KAAd,CAApB;AAIH;;AAED,WAASG,MAAT,GAAkB;AACd,WAAO3B,OAAO,CAACI,IAAD,CAAd;AACH;;AAED,WAASwB,WAAT,CAAqBC,KAArB,EAA4B;AACxB,WAAOb,WAAW,CAACa,KAAD,CAAlB;AACH,GAhCsC,CAkCvC;AACA;AACA;AAEA;AACA;AACA;;;AAEAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,WAAW,GAAG7B,kBAAkB,CAACG,IAAD,EAAO2B,IAAI,IAAI;AACjDnB,MAAAA,cAAc,CAACmB,IAAD,CAAd;AACAjB,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFiD,CAIjD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAlBqC,CAAtC;AAoBA,WAAOgB,WAAP;AACH,GAtBQ,EAsBN,CAACnB,WAAD,CAtBM,CAAT;AA0BA,QAAMqB,KAAK,GAAG;AACVjB,IAAAA,QADU;AAEVJ,IAAAA,WAFU;AAGViB,IAAAA,WAHU;AAIVX,IAAAA,MAJU;AAKVG,IAAAA,KALU;AAMVO,IAAAA,MANU;AAOVL,IAAAA,aAPU;AAQVD,IAAAA;AARU,GAAd;AAWA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEW,KAA7B;AAAA,cACK,CAACnB,OAAD,IAAYH;AADjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;IArFeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail, updateProfile } from \"firebase/auth\";\r\nimport { auth } from './firebase'\r\nimport results from './results'\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    const [isAgency, setIsAgency] = useState(false)\r\n    // const [userDetails, setUserDetails] = useState({})\r\n\r\n    function signup(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n    }\r\n\r\n    function reset(email) {\r\n        return sendPasswordResetEmail(auth, email)\r\n    }\r\n\r\n    function updateprofile(name, url) {\r\n        return updateProfile(currentUser, {\r\n            displayName: name,\r\n            photoURL: url\r\n        })\r\n    }\r\n\r\n    function logout() {\r\n        return signOut(auth)\r\n    }\r\n\r\n    function setisagency(param) {\r\n        return setIsAgency(param);\r\n    }\r\n\r\n    // function getUserAgency(user) {\r\n    //     return results.get('/users/serviceagency/' + user.uid + '.json')\r\n    // }\r\n\r\n    // function getUserEstablishment(user) {\r\n    //     return results.get('/users/establishment/' + user.uid + '.json')\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n\r\n            // Promise.all([getUserAgency(user), getUserEstablishment(user)])\r\n            //     .then(function (results) {\r\n\r\n            //         const sa = results[0]\r\n            //         const est = results[1]\r\n            //         if (sa.data !== null) {\r\n            //             const name = sa.data\r\n            //             setUserName(name)\r\n            //         } else {\r\n            //             const name = est.data.userName\r\n            //             setUserName(name)\r\n            //         }\r\n            //         console.log(userName)\r\n            //     })\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [currentUser])\r\n\r\n\r\n\r\n    const value = {\r\n        isAgency,\r\n        currentUser,\r\n        setisagency,\r\n        signup,\r\n        login,\r\n        logout,\r\n        updateprofile,\r\n        reset\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}