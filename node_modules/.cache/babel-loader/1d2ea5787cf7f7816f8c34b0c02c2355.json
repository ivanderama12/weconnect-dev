{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\serviceagency\\\\account\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Form, FloatingLabel, Button, Image, Alert } from 'react-bootstrap';\nimport { useAuth } from '../../../../AuthContext';\nimport { storage } from '../../../../firebase';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport results from '../../../../results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [postTitle, setPostTitle] = useState();\n  const [postDetails, setPostDetails] = useState();\n  const [postActive, setPostActive] = useState(false);\n  const [url, setUrl] = useState();\n  const [loading, setLoading] = useState();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState();\n  const [progress, setProgress] = useState();\n  const date = new Date();\n\n  function handleBoxClick() {\n    !postActive ? setPostActive(true) : setPostActive(false);\n  }\n\n  function handleUpload(file) {\n    setLoading(true);\n    const metadata = {\n      contentType: file.type\n    };\n    const filePath = 'images/' + date.getFullYear() + (date.getMonth() + 1) + date.getDay() + date.getHours() + date.getMinutes() + file.name.substring(file.name.length - 10);\n    console.log(filePath);\n    const storageRef = ref(storage, filePath);\n    const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n    uploadTask.on('state_changed', snapshot => {\n      setProgress(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n\n        case 'running':\n          console.log('Upload is running');\n          break;\n      }\n    }, error => {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n        // ...\n\n        case 'storage/unknown':\n          // Unknown error occurred, inspect error.serverResponse\n          break;\n\n        default:\n          break;\n      }\n    }, () => {\n      // Upload completed successfully, now we can get the download URL\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setUrl(downloadURL);\n        setLoading(false);\n      });\n    });\n  }\n\n  function handleSubmitClick() {\n    console.log(postTitle, postDetails, postActive, url, date);\n    results.post('/posts.json', {\n      agencyId: currentUser.uid,\n      title: postTitle,\n      details: postDetails,\n      active: postActive,\n      imageRef: url,\n      date: date\n    }).catch(function (error) {\n      setError('Database Error');\n    }).then(function () {\n      setSuccess(true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [success && /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"mx-3 mt-3 mb-0\",\n      variant: \"success\",\n      style: {\n        fontSize: '14px'\n      },\n      children: \" Successfuly Posted \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"mx-3 mt-3 mb-0\",\n      variant: \"danger\",\n      style: {\n        fontSize: '14px'\n      },\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"m-3\",\n        style: {\n          width: '800px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"bg-danger text-white\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                className: \"mb-3\",\n                label: \"Title\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Title\",\n                  required: true,\n                  type: \"text\",\n                  onChange: e => setPostTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-2\",\n              controlId: \"exampleForm.ControlTextarea1\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                placeholder: \"Description\",\n                onChange: e => setPostDetails(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Active\",\n                onClick: handleBoxClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formFile\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Attachment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                onChange: e => handleUpload(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleSubmitClick,\n                disabled: loading,\n                children: [\"Post \", '>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: 'Upload is ' + progress + '% done'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              className: \"create-post-pic\",\n              src: url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"hR4ocq8FSLGPAcKT8GB4PFzuuwA=\", false, function () {\n  return [useAuth];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/serviceagency/account/CreatePost.js"],"names":["React","useState","Card","Form","FloatingLabel","Button","Image","Alert","useAuth","storage","ref","uploadBytesResumable","getDownloadURL","results","CreatePost","currentUser","postTitle","setPostTitle","postDetails","setPostDetails","postActive","setPostActive","url","setUrl","loading","setLoading","success","setSuccess","error","setError","progress","setProgress","date","Date","handleBoxClick","handleUpload","file","metadata","contentType","type","filePath","getFullYear","getMonth","getDay","getHours","getMinutes","name","substring","length","console","log","storageRef","uploadTask","on","snapshot","bytesTransferred","totalBytes","state","code","then","downloadURL","handleSubmitClick","post","agencyId","uid","title","details","active","imageRef","catch","fontSize","width","e","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Card, Form, FloatingLabel, Button, Image, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../../../../AuthContext'\r\nimport { storage } from '../../../../firebase'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\"\r\nimport results from '../../../../results'\r\n\r\nconst CreatePost = () => {\r\n\r\n    const { currentUser } = useAuth()\r\n    const [postTitle, setPostTitle] = useState()\r\n    const [postDetails, setPostDetails] = useState()\r\n    const [postActive, setPostActive] = useState(false)\r\n    const [url, setUrl] = useState()\r\n    const [loading, setLoading] = useState()\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState()\r\n    const [progress, setProgress] = useState()\r\n    const date = new Date()\r\n\r\n    function handleBoxClick() {\r\n        !postActive ? setPostActive(true) : setPostActive(false)\r\n    }\r\n\r\n    function handleUpload(file) {\r\n        setLoading(true)\r\n        const metadata = {\r\n            contentType: file.type\r\n        };\r\n        const filePath = 'images/' + date.getFullYear() + (date.getMonth() + 1) + date.getDay() + date.getHours() + date.getMinutes() + file.name.substring(file.name.length - 10)\r\n        console.log(filePath)\r\n        const storageRef = ref(storage, filePath)\r\n        const uploadTask = uploadBytesResumable(storageRef, file, metadata)\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\r\n                switch (snapshot.state) {\r\n                    case 'paused':\r\n                        console.log('Upload is paused')\r\n                        break;\r\n                    case 'running':\r\n                        console.log('Upload is running')\r\n                        break\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    setUrl(downloadURL)\r\n                    setLoading(false)\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    function handleSubmitClick() {\r\n        console.log(postTitle, postDetails, postActive, url, date)\r\n        results.post('/posts.json', {\r\n            agencyId: currentUser.uid,\r\n            title: postTitle,\r\n            details: postDetails,\r\n            active: postActive,\r\n            imageRef: url,\r\n            date: date\r\n        }).catch(function (error) {\r\n            setError('Database Error')\r\n        }).then(function () {\r\n            setSuccess(true)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {success && <Alert className='mx-3 mt-3 mb-0' variant='success' style={{ fontSize: '14px' }}> Successfuly Posted </Alert>}\r\n        {error && <Alert className='mx-3 mt-3 mb-0' variant='danger' style={{ fontSize: '14px' }}> {error} </Alert>}\r\n            <div className='d-flex justify-content-center'>\r\n                <Card className='m-3' style={{ width: '800px' }}>\r\n                    <Card.Header className='bg-danger text-white'>\r\n                        Create Post\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <FloatingLabel className='mb-3' label='Title' >\r\n                                    <Form.Control\r\n                                        placeholder='Title'\r\n                                        required type='text'\r\n                                        onChange={(e) => setPostTitle(e.target.value)}\r\n                                    />\r\n                                </FloatingLabel>\r\n                            </Form.Group>\r\n                            <Form.Group className='mb-2' controlId='exampleForm.ControlTextarea1'>\r\n                                <Form.Control\r\n                                    as='textarea'\r\n                                    rows={3}\r\n                                    placeholder='Description'\r\n                                    onChange={(e) => setPostDetails(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Active'\r\n                                    onClick={handleBoxClick}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                <Form.Label>Attachment</Form.Label>\r\n                                <Form.Control type=\"file\" onChange={(e) => handleUpload(e.target.files[0])} />\r\n                            </Form.Group>\r\n\r\n                            <div className='d-flex justify-content-end'>\r\n                                <Button variant='secondary' onClick={handleSubmitClick} disabled={loading}>\r\n                                    Post {'>'}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n\r\n                        <div >\r\n                            {loading && <div>\r\n                                {'Upload is ' + progress + '% done'}\r\n                            </div>}\r\n                            <Image className='create-post-pic' src={url} />\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n"]},"metadata":{},"sourceType":"module"}