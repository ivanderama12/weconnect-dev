{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\admin\\\\EditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, FloatingLabel } from 'react-bootstrap';\nimport results from '../../../results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = props => {\n  _s();\n\n  const uid = props.uid;\n  const type = props.type;\n  const [contactPerson, setContactPerson] = useState();\n  const [companyName, setCompanyName] = useState();\n  const [email, setEmail] = useState();\n  const [premiumExpiry, setPremiumExpiry] = useState();\n  const [user, setUser] = useState(); // var d = new Date()\n  // var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate()\n\n  useEffect(() => {\n    results.get('/users/' + type + '/' + uid + '.json').then(function (response) {\n      setUser(response.data);\n      setContactPerson(response.data.contactPerson);\n      setCompanyName(response.data.companyName);\n      setEmail(response.data.email);\n      setPremiumExpiry(response.data.premiumExpiry);\n    }).catch(function (error) {\n      //error here\n      console.log(error);\n    });\n  }, [type, uid]);\n\n  function handleSubmit() {\n    console.log(user.email, email);\n\n    if (user.email !== email) {}\n  }\n\n  const isAgency = props.type === 'serviceagency' ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", isAgency && /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Contact Person\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Contact Person\",\n            value: contactPerson,\n            onChange: e => setContactPerson(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Company Name\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Company Name\",\n            value: companyName,\n            onChange: e => setCompanyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Email Address\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Premium Expiry\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: premiumExpiry,\n            onChange: e => setPremiumExpiry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\" // type=\"submit\"\n          ,\n          onClick: handleSubmit,\n          children: \"Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 22\n        }, this), \" \", premiumExpiry, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this);\n};\n\n_s(EditForm, \"Sg0ls5C/rOGb44ferCjKQL2UQrM=\");\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/admin/EditForm.js"],"names":["React","useState","useEffect","Form","Button","FloatingLabel","results","EditForm","props","uid","type","contactPerson","setContactPerson","companyName","setCompanyName","email","setEmail","premiumExpiry","setPremiumExpiry","user","setUser","get","then","response","data","catch","error","console","log","handleSubmit","isAgency","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, FloatingLabel } from 'react-bootstrap'\r\nimport results from '../../../results'\r\n\r\nconst EditForm = (props) => {\r\n    const uid = props.uid\r\n    const type = props.type\r\n\r\n    const [contactPerson, setContactPerson] = useState()\r\n    const [companyName, setCompanyName] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [premiumExpiry, setPremiumExpiry] = useState()\r\n    const [user, setUser] = useState()\r\n\r\n    // var d = new Date()\r\n    // var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate()\r\n\r\n    useEffect(() => {\r\n        results.get('/users/' + type + '/' + uid + '.json')\r\n            .then(function(response) {\r\n                setUser(response.data)\r\n                setContactPerson(response.data.contactPerson)\r\n                setCompanyName(response.data.companyName)\r\n                setEmail(response.data.email)\r\n                setPremiumExpiry(response.data.premiumExpiry)\r\n            }).catch(function(error) {\r\n                //error here\r\n                console.log(error)\r\n            })\r\n    }, [type, uid])\r\n\r\n    function handleSubmit() {\r\n        console.log(user.email, email)\r\n        if (user.email !== email) {\r\n\r\n        }\r\n    }\r\n\r\n    const isAgency = props.type === 'serviceagency' ? true : false\r\n    return ( <\r\n        div > {\r\n            isAgency && < Form >\r\n            <\r\n            Form.Group >\r\n            <\r\n            FloatingLabel\r\n            label = \"Contact Person\"\r\n            className = \"mb-3\" >\r\n            <\r\n            Form.Control\r\n            required\r\n            type = \"text\"\r\n            placeholder = \"Contact Person\"\r\n            value = { contactPerson }\r\n            onChange = {\r\n                (e) => setContactPerson(e.target.value)\r\n            }\r\n            /> < /\r\n            FloatingLabel > <\r\n            /Form.Group>\r\n\r\n            <\r\n            Form.Group >\r\n            <\r\n            FloatingLabel\r\n            label = \"Company Name\"\r\n            className = \"mb-3\" >\r\n            <\r\n            Form.Control\r\n            required\r\n            type = \"text\"\r\n            placeholder = \"Company Name\"\r\n            value = { companyName }\r\n            onChange = {\r\n                (e) => setCompanyName(e.target.value)\r\n            }\r\n            /> < /\r\n            FloatingLabel > <\r\n            /Form.Group>\r\n\r\n            <\r\n            Form.Group >\r\n            <\r\n            FloatingLabel\r\n            label = \"Email Address\"\r\n            className = \"mb-3\" >\r\n            <\r\n            Form.Control\r\n            required\r\n            type = \"email\"\r\n            placeholder = \"Email Address\"\r\n            value = { email }\r\n            onChange = {\r\n                (e) => setEmail(e.target.value)\r\n            }\r\n            /> < /\r\n            FloatingLabel > <\r\n            /Form.Group>\r\n\r\n            <\r\n            Form.Group >\r\n            <\r\n            FloatingLabel\r\n            label = \"Premium Expiry\"\r\n            className = \"mb-3\" >\r\n            <\r\n            Form.Control\r\n            type = 'date'\r\n            value = { premiumExpiry }\r\n            onChange = {\r\n                (e) => setPremiumExpiry(e.target.value)\r\n            }\r\n            /> < /\r\n            FloatingLabel > <\r\n            /Form.Group>\r\n\r\n            <\r\n            div className = \"d-grid gap-2\" >\r\n            <\r\n            Button variant = \"success\"\r\n            // type=\"submit\"\r\n            onClick = { handleSubmit } >\r\n            Submit <\r\n            /Button> <\r\n            hr / > { premiumExpiry } <\r\n            /div> < /\r\n            Form >\r\n        } <\r\n        /div>\r\n    )\r\n}\r\n\r\nexport default EditForm"]},"metadata":{},"sourceType":"module"}