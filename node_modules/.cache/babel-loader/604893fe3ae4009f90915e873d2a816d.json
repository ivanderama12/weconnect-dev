{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\serviceagency\\\\account\\\\profile\\\\EditProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, FloatingLabel, Image } from 'react-bootstrap';\nimport { ref, uploadBytesResumable, getDownloadURL } from '@firebase/storage';\nimport { storage } from '../../../../../firebase';\nimport { useAuth } from '../../../../../AuthContext';\nimport results from '../../../../../results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = () => {\n  _s();\n\n  const {\n    currentUser,\n    userDetails\n  } = useAuth();\n  const [contactPerson, setContactPerson] = useState(userDetails.userName);\n  const [companyName, setCompanyName] = useState(userDetails.companyName);\n  const [email, setEmail] = useState(userDetails.email);\n  const [file, setFile] = useState();\n  const [url, setUrl] = useState();\n  const [progress, setProgress] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const date = new Date();\n  console.log(userDetails, currentUser.uid);\n\n  function handleSubmit() {}\n\n  function handleUpload(file) {\n    setLoading(true);\n    const metadata = {\n      contentType: file.type\n    };\n    const filePath = 'images/' + date.getFullYear() + (date.getMonth() + 1) + date.getDay() + date.getHours() + date.getMinutes() + file.name.substring(file.name.length - 10);\n    console.log(filePath);\n    const storageRef = ref(storage, filePath);\n    const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n    uploadTask.on('state_changed', snapshot => {\n      setProgress(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n\n        case 'running':\n          console.log('Upload is running');\n          break;\n      }\n    }, error => {\n      switch (error.code) {\n        case 'storage/unauthorized':\n          setError('Unauthroized upload');\n          break;\n\n        case 'storage/canceled':\n          setError('Upload Cancelled');\n          break;\n\n        case 'storage/unknown':\n          setError('Unknown Error try again');\n          break;\n\n        default:\n          break;\n      }\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setUrl(downloadURL);\n        setLoading(false);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 d-flex\",\n        style: {\n          gap: '35px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-pic\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            fluid: true,\n            src: userDetails.imageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Change Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Contact Person\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Contact Person\",\n            value: contactPerson,\n            onChange: e => setContactPerson(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Company Name\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Company Name\",\n            value: companyName,\n            onChange: e => setCompanyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Email Address\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\" // type=\"submit\"\n          ,\n          onClick: handleSubmit,\n          children: \"Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"TGxGinrGaa25fgyM5lY6b0V4TWo=\", false, function () {\n  return [useAuth];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/serviceagency/account/profile/EditProfile.js"],"names":["React","useState","useEffect","Form","Button","FloatingLabel","Image","ref","uploadBytesResumable","getDownloadURL","storage","useAuth","results","EditForm","currentUser","userDetails","contactPerson","setContactPerson","userName","companyName","setCompanyName","email","setEmail","file","setFile","url","setUrl","progress","setProgress","loading","setLoading","error","setError","date","Date","console","log","uid","handleSubmit","handleUpload","metadata","contentType","type","filePath","getFullYear","getMonth","getDay","getHours","getMinutes","name","substring","length","storageRef","uploadTask","on","snapshot","bytesTransferred","totalBytes","state","code","then","downloadURL","gap","imageRef","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, FloatingLabel, Image } from 'react-bootstrap'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from '@firebase/storage'\r\nimport { storage } from '../../../../../firebase'\r\n\r\nimport { useAuth } from '../../../../../AuthContext'\r\nimport results from '../../../../../results'\r\n\r\nconst EditForm = () => {\r\n\r\n    const { currentUser, userDetails } = useAuth()\r\n\r\n    const [contactPerson, setContactPerson] = useState(userDetails.userName)\r\n    const [companyName, setCompanyName] = useState(userDetails.companyName)\r\n    const [email, setEmail] = useState(userDetails.email)\r\n    const [file, setFile] = useState()\r\n    const [url, setUrl] = useState()\r\n\r\n    const [progress, setProgress] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n\r\n\r\n    const date = new Date()\r\n\r\n\r\n    console.log(userDetails, currentUser.uid)\r\n\r\n    function handleSubmit() {\r\n\r\n    }\r\n\r\n    function handleUpload(file) {\r\n        setLoading(true)\r\n        const metadata = {\r\n            contentType: file.type\r\n        }\r\n        const filePath = 'images/' + date.getFullYear() + (date.getMonth() + 1) + date.getDay() + date.getHours() + date.getMinutes() + file.name.substring(file.name.length - 10)\r\n        console.log(filePath)\r\n        const storageRef = ref(storage, filePath)\r\n        const uploadTask = uploadBytesResumable(storageRef, file, metadata)\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\r\n                switch (snapshot.state) {\r\n                    case 'paused':\r\n                        console.log('Upload is paused')\r\n                        break;\r\n                    case 'running':\r\n                        console.log('Upload is running')\r\n                        break\r\n                }\r\n            },\r\n            (error) => {\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        setError('Unauthroized upload')\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        setError('Upload Cancelled')\r\n                        break;\r\n                    case 'storage/unknown':\r\n                        setError('Unknown Error try again')\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    setUrl(downloadURL)\r\n                    setLoading(false)\r\n                })\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form className='p-3' >\r\n                <div className='mb-3 d-flex' style={{ gap: '35px' }}>\r\n                    <div className='profile-pic'>\r\n                        <Image fluid src={userDetails.imageRef} />\r\n                    </div>\r\n\r\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                        <Form.Label>Change Profile Picture</Form.Label>\r\n                        <Form.Control type=\"file\" size='sm' />\r\n                    </Form.Group>\r\n                </div>\r\n                <Form.Group>\r\n                    <FloatingLabel\r\n                        label=\"Contact Person\"\r\n                        className=\"mb-3\"\r\n                    >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Contact Person\"\r\n                            value={contactPerson}\r\n                            onChange={(e) => setContactPerson(e.target.value)}\r\n                        />\r\n                    </FloatingLabel >\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <FloatingLabel\r\n                        label=\"Company Name\"\r\n                        className=\"mb-3\" >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Company Name\"\r\n                            value={companyName}\r\n                            onChange={(e) => setCompanyName(e.target.value)}\r\n                        />\r\n                    </FloatingLabel >\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <FloatingLabel\r\n                        label=\"Email Address\"\r\n                        className=\"mb-3\" >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </FloatingLabel>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\" >\r\n                    <Button variant=\"success\"\r\n                        // type=\"submit\"\r\n                        onClick={handleSubmit} >\r\n                        Submit </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm"]},"metadata":{},"sourceType":"module"}