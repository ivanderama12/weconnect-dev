{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\serviceagency\\\\account\\\\profile\\\\EditProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, FloatingLabel, Image } from 'react-bootstrap';\nimport { ref, uploadBytesResumable, getDownloadURL } from '@firebase/storage';\nimport { storage } from '../../../../../firebase';\nimport { useAuth } from '../../../../../AuthContext';\nimport results from '../../../../../results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = () => {\n  _s();\n\n  const {\n    currentUser,\n    userDetails,\n    updateprofile,\n    updateemail,\n    setuserdetails\n  } = useAuth();\n  const [userName, setUserName] = useState(userDetails.userName);\n  const [userTitle, setUserTitle] = useState(userDetails.userTitle);\n  const [companyName, setCompanyName] = useState(userDetails.companyName);\n  const [email, setEmail] = useState(userDetails.email);\n  const [url, setUrl] = useState(userDetails.imageRef);\n  const [progress, setProgress] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const [success, setSuccess] = useState(false);\n  const date = new Date();\n\n  function handleUpload(file) {\n    if (file) {\n      setLoading(true);\n      const metadata = {\n        contentType: file.type\n      };\n      const filePath = 'images/' + date.getFullYear() + (date.getMonth() + 1) + date.getDay() + date.getHours() + date.getMinutes() + file.name.substring(file.name.length - 10);\n      const storageRef = ref(storage, filePath);\n      const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n      uploadTask.on('state_changed', snapshot => {\n        setProgress(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {\n        switch (error.code) {\n          case 'storage/unauthorized':\n            setError('Unauthroized upload');\n            break;\n\n          case 'storage/canceled':\n            setError('Upload Cancelled');\n            break;\n\n          case 'storage/unknown':\n            setError('Unknown Error try again');\n            break;\n\n          default:\n            break;\n        }\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          setUrl(downloadURL);\n          setLoading(false);\n        });\n      });\n    }\n  }\n\n  async function handleSubmit() {\n    setSuccess(false);\n    var errorCheck = false;\n    console.log(userDetails);\n\n    if (email !== userDetails.email) {\n      console.log('emailchange');\n\n      try {\n        await updateemail(email);\n      } catch {\n        setError('Something went wrong');\n        errorCheck = true;\n      }\n    }\n\n    if (url !== userDetails.imageRef || companyName !== userDetails.companyName) {\n      try {\n        console.log('pic');\n        await updateprofile;\n      } catch {\n        setError('Something went wrong');\n        errorCheck = true;\n      }\n    }\n\n    if (!errorCheck) {\n      results.patch('/users/serviceagency/' + currentUser.uid + '/.json', { ...userDetails,\n        companyName: companyName,\n        email: email,\n        userName: userName,\n        userTitle: userTitle\n      }).catch(function () {\n        setError('Database Error');\n      }).then(function (response) {\n        setuserdetails(response.data);\n        setSuccess(true);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 d-flex\",\n        style: {\n          gap: '35px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-pic\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            fluid: true,\n            src: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Change Profile Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              size: \"sm\",\n              onChange: e => handleUpload(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Uploading \", Math.round(progress), \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }, this), progress === 100 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-success\",\n            children: \"Upload Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Company Name\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Company Name\",\n            value: companyName,\n            onChange: e => setCompanyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Contact Person\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Contact Person\",\n            value: userName,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Contact Person\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Title\",\n            value: userTitle,\n            onChange: e => setUserTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          label: \"Email Address\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\" // type=\"submit\"\n          ,\n          disabled: loading,\n          onClick: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"/Jxb/E2BRzQsne92iJtvoFDrWu8=\", false, function () {\n  return [useAuth];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/serviceagency/account/profile/EditProfile.js"],"names":["React","useState","Form","Button","FloatingLabel","Image","ref","uploadBytesResumable","getDownloadURL","storage","useAuth","results","EditForm","currentUser","userDetails","updateprofile","updateemail","setuserdetails","userName","setUserName","userTitle","setUserTitle","companyName","setCompanyName","email","setEmail","url","setUrl","imageRef","progress","setProgress","loading","setLoading","error","setError","success","setSuccess","date","Date","handleUpload","file","metadata","contentType","type","filePath","getFullYear","getMonth","getDay","getHours","getMinutes","name","substring","length","storageRef","uploadTask","on","snapshot","bytesTransferred","totalBytes","state","console","log","code","then","downloadURL","handleSubmit","errorCheck","patch","uid","catch","response","data","gap","e","target","files","Math","round","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button, FloatingLabel, Image } from 'react-bootstrap'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from '@firebase/storage'\r\nimport { storage } from '../../../../../firebase'\r\n\r\nimport { useAuth } from '../../../../../AuthContext'\r\nimport results from '../../../../../results'\r\n\r\nconst EditForm = () => {\r\n\r\n    const { currentUser, userDetails, updateprofile, updateemail, setuserdetails } = useAuth()\r\n\r\n    const [userName, setUserName] = useState(userDetails.userName)\r\n    const [userTitle, setUserTitle] = useState(userDetails.userTitle)\r\n    const [companyName, setCompanyName] = useState(userDetails.companyName)\r\n    const [email, setEmail] = useState(userDetails.email)\r\n    const [url, setUrl] = useState(userDetails.imageRef)\r\n\r\n    const [progress, setProgress] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n    const [success, setSuccess] = useState(false)\r\n\r\n\r\n    const date = new Date()\r\n\r\n    function handleUpload(file) {\r\n        if (file) {\r\n            setLoading(true)\r\n            const metadata = {\r\n                contentType: file.type\r\n            }\r\n            const filePath = 'images/' + date.getFullYear() + (date.getMonth() + 1) + date.getDay() + date.getHours() + date.getMinutes() + file.name.substring(file.name.length - 10)\r\n            const storageRef = ref(storage, filePath)\r\n            const uploadTask = uploadBytesResumable(storageRef, file, metadata)\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\r\n                    switch (snapshot.state) {\r\n                        case 'paused':\r\n                            console.log('Upload is paused')\r\n                            break;\r\n                        case 'running':\r\n                            console.log('Upload is running')\r\n                            break\r\n                    }\r\n                },\r\n                (error) => {\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n                            setError('Unauthroized upload')\r\n                            break;\r\n                        case 'storage/canceled':\r\n                            setError('Upload Cancelled')\r\n                            break;\r\n                        case 'storage/unknown':\r\n                            setError('Unknown Error try again')\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                },\r\n                () => {\r\n                    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                        setUrl(downloadURL)\r\n                        setLoading(false)\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        setSuccess(false)\r\n        var errorCheck = false\r\n        console.log(userDetails)\r\n        if (email !== userDetails.email) {\r\n            console.log('emailchange')\r\n            try {\r\n                await updateemail(email)\r\n            } catch {\r\n                setError('Something went wrong')\r\n                errorCheck = true\r\n            }\r\n        }\r\n\r\n        if (url !== userDetails.imageRef || companyName !== userDetails.companyName) {\r\n            try {\r\n                console.log('pic')\r\n                await updateprofile\r\n            } catch {\r\n                setError('Something went wrong')\r\n                errorCheck = true\r\n            }\r\n        }\r\n\r\n        if (!errorCheck) {\r\n            results.patch('/users/serviceagency/' + currentUser.uid + '/.json', {\r\n                ...userDetails,\r\n                companyName: companyName,\r\n                email: email,\r\n                userName: userName,\r\n                userTitle: userTitle,\r\n            }).catch(function () {\r\n                setError('Database Error')\r\n            }).then(function (response) {\r\n                setuserdetails(response.data)\r\n                setSuccess(true)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form className='p-3' >\r\n                <div className='mb-3 d-flex' style={{ gap: '35px' }}>\r\n                    <div className='profile-pic'>\r\n                        <Image fluid src={url} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Change Profile Picture</Form.Label>\r\n                            <Form.Control type=\"file\" size='sm' onChange={(e) => handleUpload(e.target.files[0])} />\r\n                        </Form.Group>\r\n\r\n                        {loading && <div>\r\n                            Uploading {Math.round(progress)} %\r\n                        </div>}\r\n                        {progress === 100 && !loading && <div className='text-success'>\r\n                            Upload Complete!\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <Form.Group >\r\n                    <FloatingLabel\r\n                        label=\"Company Name\"\r\n                        className=\"mb-3\" >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Company Name\"\r\n                            value={companyName}\r\n                            onChange={(e) => setCompanyName(e.target.value)}\r\n                        />\r\n                    </FloatingLabel >\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <FloatingLabel\r\n                        label=\"Contact Person\"\r\n                        className=\"mb-3\"\r\n                    >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Contact Person\"\r\n                            value={userName}\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                        />\r\n                    </FloatingLabel >\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <FloatingLabel\r\n                        label=\"Contact Person\"\r\n                        className=\"mb-3\"\r\n                    >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Title\"\r\n                            value={userTitle}\r\n                            onChange={(e) => setUserTitle(e.target.value)}\r\n                        />\r\n                    </FloatingLabel >\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <FloatingLabel\r\n                        label=\"Email Address\"\r\n                        className=\"mb-3\" >\r\n                        <Form.Control\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </FloatingLabel>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\" >\r\n                    <Button variant=\"success\"\r\n                        // type=\"submit\"\r\n                        disabled={loading}\r\n                        onClick={handleSubmit} >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </Form >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EditForm"]},"metadata":{},"sourceType":"module"}