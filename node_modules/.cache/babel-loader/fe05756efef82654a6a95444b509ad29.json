{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\serviceagency\\\\services\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form, FloatingLabel, Button } from 'react-bootstrap';\nimport results from '../../../../results';\nimport { useAuth } from '../../../../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [availability, setAvailability] = useState('0');\n  const [ID, setID] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState();\n  const [hasSelected, setHasSelected] = useState(false);\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    const serviceList = [];\n    results.get('/services.json').then(function (response) {\n      for (let key in response.data) {\n        if (response.data[key][currentUser.uid]) {\n          serviceList.unshift({\n            id: key,\n            name: response.data[key].serviceName,\n            availability: response.data[key][currentUser.uid].availability\n          });\n        }\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      setError('Database Error');\n    }).then(function () {\n      setLoading(false);\n      setServices(serviceList);\n    });\n  }, [currentUser.uid, services]);\n\n  function handleChange(e) {\n    const selected = e.target.value === 'default' ? false : true;\n    setHasSelected(selected);\n\n    if (!selected) {\n      setAvailability('0');\n      setID();\n    }\n\n    results.get('/services/' + e.target.value + '/' + currentUser.uid + '/.json').then(function (response) {\n      if (response.data) {\n        setAvailability(response.data.availability);\n        setID(e.target.value);\n      }\n    });\n  }\n\n  function handleSave(e) {\n    e.preventDefault();\n    console.log(ID, availability);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"m-3\",\n        style: {\n          width: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Edit Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"p-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Default select example\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"default\",\n                children: \"Select Service Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: service.id,\n                children: service.name\n              }, service.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                className: \"my-3\",\n                label: \"Availability\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Availability\",\n                  required: true,\n                  type: \"text\",\n                  value: availability,\n                  disabled: !hasSelected,\n                  onChange: e => setAvailability(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                type: \"submit\",\n                style: {\n                  minWidth: '150px'\n                },\n                onClick: handleSave,\n                disabled: !hasSelected,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"RifU2J/L0EWva13zFaGw7BjrH5o=\", false, function () {\n  return [useAuth];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/serviceagency/services/Edit.js"],"names":["React","useState","useEffect","Card","Form","FloatingLabel","Button","results","useAuth","Edit","currentUser","availability","setAvailability","ID","setID","error","setError","loading","setLoading","hasSelected","setHasSelected","services","setServices","serviceList","get","then","response","key","data","uid","unshift","id","name","serviceName","catch","handleChange","e","selected","target","value","handleSave","preventDefault","console","log","width","map","service","minWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Card, Form, FloatingLabel, Button } from 'react-bootstrap'\r\nimport results from '../../../../results'\r\nimport { useAuth } from '../../../../AuthContext'\r\n\r\nconst Edit = () => {\r\n\r\n    const { currentUser } = useAuth()\r\n    const [availability, setAvailability] = useState('0')\r\n    const [ID, setID] = useState()\r\n\r\n    const [error, setError] = useState()\r\n    const [loading, setLoading] = useState()\r\n    const [hasSelected, setHasSelected] = useState(false)\r\n    const [services, setServices] = useState([])\r\n\r\n    useEffect(() => {\r\n        const serviceList = []\r\n        results.get('/services.json')\r\n            .then(function (response) {\r\n                for (let key in response.data) {\r\n                    if (response.data[key][currentUser.uid]) {\r\n                        serviceList.unshift(\r\n                            {\r\n                                id: key,\r\n                                name: response.data[key].serviceName,\r\n                                availability: response.data[key][currentUser.uid].availability\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }).catch(function (error) {\r\n                setLoading(false)\r\n                setError('Database Error')\r\n            })\r\n            .then(function () {\r\n                setLoading(false)\r\n                setServices(serviceList)\r\n            });\r\n    }, [currentUser.uid, services])\r\n\r\n    function handleChange(e) {\r\n        const selected = (e.target.value === 'default') ? false : true\r\n        setHasSelected(selected)\r\n        if (!selected) {\r\n            setAvailability('0')\r\n            setID()\r\n        }\r\n        results.get('/services/' + e.target.value + '/' + currentUser.uid + '/.json')\r\n            .then(function (response) {\r\n                if (response.data) {\r\n                    setAvailability(response.data.availability)\r\n                    setID(e.target.value)\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleSave(e) {\r\n        e.preventDefault()\r\n        console.log(ID, availability)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='d-flex justify-content-center'>\r\n                <Card className='m-3' style={{ width: '500px' }}>\r\n                    <Card.Header>\r\n                        Edit Services\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form className='p-3'>\r\n                            <Form.Select aria-label=\"Default select example\" onChange={handleChange}>\r\n                                <option value='default'>Select Service Type</option>\r\n                                {services.map((service) =>\r\n                                    <option key={service.id} value={service.id}>{service.name}</option>\r\n                                )}\r\n                            </Form.Select>\r\n\r\n                            <Form.Group>\r\n                                <FloatingLabel className='my-3' label='Availability' >\r\n                                    <Form.Control\r\n                                        placeholder='Availability'\r\n                                        required\r\n                                        type='text'\r\n                                        value={availability}\r\n                                        disabled={!hasSelected}\r\n                                        onChange={(e) => setAvailability(e.target.value)}\r\n                                    />\r\n                                </FloatingLabel>\r\n                            </Form.Group>\r\n\r\n                            <div className='d-flex justify-content-center'>\r\n                                <Button\r\n                                    variant='success'\r\n                                    type='submit'\r\n                                    style={{ minWidth: '150px' }}\r\n                                    onClick={handleSave}\r\n                                    disabled={!hasSelected}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n"]},"metadata":{},"sourceType":"module"}