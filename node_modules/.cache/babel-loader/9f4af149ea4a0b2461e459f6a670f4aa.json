{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\De Rama\\\\Desktop\\\\weconnect\\\\src\\\\components\\\\views\\\\serviceagency\\\\account\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Form, FloatingLabel, Button, Image } from 'react-bootstrap';\nimport { useAuth } from '../../../../AuthContext';\nimport { storage } from '../../../../firebase';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport results from '../../../../results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [postTitle, setPostTitle] = useState();\n  const [postDetails, setPostDetails] = useState();\n  const [postActive, setPostActive] = useState(false);\n  const [file, setFile] = useState();\n  const [url, setUrl] = useState();\n  const [success, setSuccess] = useState();\n  const [error, setError] = useState();\n  const current = new Date();\n  const date = current.getDate() + '/' + (current.getMonth() + 1) + '/' + current.getFullYear();\n\n  function handleBoxClick() {\n    !postActive ? setPostActive(true) : setPostActive(false);\n  }\n\n  function handleSubmitClick(e) {\n    e.preventDefault();\n    console.log(currentUser, postTitle, postDetails);\n    console.log(file);\n\n    if (file) {\n      const metadata = {\n        contentType: 'image/jpeg'\n      };\n      const storageRef = ref(storage, 'images/' + file.name);\n      const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n      uploadTask.on('state_changed', snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n      }, error => {\n        switch (error.code) {\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n\n          case 'storage/unknown':\n            setError(error);\n            break;\n\n          default:\n        }\n      }, () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          setUrl(downloadURL);\n          results.post('/posts.json', {\n            title: postTitle,\n            details: postDetails,\n            active: postActive,\n            imageRef: url,\n            date: current\n          }).then(function () {\n            setSuccess(true);\n          }).catch(function (error) {\n            setError(error);\n          });\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"m-3\",\n        style: {\n          width: '800px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"bg-danger text-white\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                className: \"mb-3\",\n                label: \"Title\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Title\",\n                  required: true,\n                  type: \"text\",\n                  onChange: e => setPostTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-2\",\n              controlId: \"exampleForm.ControlTextarea1\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                placeholder: \"Description\",\n                onChange: e => setPostDetails(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Active\",\n                onClick: handleBoxClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formFile\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Attachment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                onChange: e => setFile(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleSubmitClick,\n                type: \"submit\",\n                children: [\"Post \", '>']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"IZFcxUBJRsnLkLUJp7ErOXXOAcg=\", false, function () {\n  return [useAuth];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/De Rama/Desktop/weconnect/src/components/views/serviceagency/account/CreatePost.js"],"names":["React","useState","Card","Form","FloatingLabel","Button","Image","useAuth","storage","ref","uploadBytesResumable","getDownloadURL","results","CreatePost","currentUser","postTitle","setPostTitle","postDetails","setPostDetails","postActive","setPostActive","file","setFile","url","setUrl","success","setSuccess","error","setError","current","Date","date","getDate","getMonth","getFullYear","handleBoxClick","handleSubmitClick","e","preventDefault","console","log","metadata","contentType","storageRef","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","code","then","downloadURL","post","title","details","active","imageRef","catch","width","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Card, Form, FloatingLabel, Button, Image } from 'react-bootstrap'\r\nimport { useAuth } from '../../../../AuthContext'\r\nimport { storage } from '../../../../firebase'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\"\r\nimport results from '../../../../results'\r\n\r\nconst CreatePost = () => {\r\n\r\n    const { currentUser } = useAuth()\r\n    const [postTitle, setPostTitle] = useState()\r\n    const [postDetails, setPostDetails] = useState()\r\n    const [postActive, setPostActive] = useState(false)\r\n    const [file, setFile] = useState()\r\n    const [url, setUrl] = useState()\r\n    const [success, setSuccess] = useState()\r\n    const [error, setError] = useState()\r\n\r\n    const current = new Date();\r\n    const date = current.getDate() + '/' + (current.getMonth() + 1) + '/' + current.getFullYear()\r\n\r\n    function handleBoxClick() {\r\n        !postActive ? setPostActive(true) : setPostActive(false)\r\n    }\r\n\r\n    function handleSubmitClick(e) {\r\n        e.preventDefault()\r\n        console.log(currentUser, postTitle, postDetails)\r\n        console.log(file)\r\n        if (file) {\r\n            const metadata = {\r\n                contentType: 'image/jpeg'\r\n            };\r\n\r\n            const storageRef = ref(storage, 'images/' + file.name)\r\n            const uploadTask = uploadBytesResumable(storageRef, file, metadata)\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done')\r\n                },\r\n                (error) => {\r\n                    switch (error.code) {\r\n                        case 'storage/canceled':\r\n                            // User canceled the upload\r\n                            break\r\n                        case 'storage/unknown':\r\n                            setError(error)\r\n                            break\r\n\r\n                        default:\r\n                    }\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                        setUrl(downloadURL)\r\n                        results.post('/posts.json', {\r\n                            title: postTitle,\r\n                            details: postDetails,\r\n                            active: postActive,\r\n                            imageRef: url,\r\n                            date: current\r\n                        }).then(function () {\r\n                            setSuccess(true)\r\n                        }).catch(function (error) {\r\n                            setError(error)\r\n                        })\r\n                    })\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='d-flex justify-content-center'>\r\n                <Card className='m-3' style={{ width: '800px' }}>\r\n                    <Card.Header className='bg-danger text-white'>\r\n                        Create Post\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <FloatingLabel className='mb-3' label='Title' >\r\n                                    <Form.Control\r\n                                        placeholder='Title'\r\n                                        required type='text'\r\n                                        onChange={(e) => setPostTitle(e.target.value)}\r\n                                    />\r\n                                </FloatingLabel>\r\n                            </Form.Group>\r\n                            <Form.Group className='mb-2' controlId='exampleForm.ControlTextarea1'>\r\n                                <Form.Control\r\n                                    as='textarea'\r\n                                    rows={3}\r\n                                    placeholder='Description'\r\n                                    onChange={(e) => setPostDetails(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Active'\r\n                                    onClick={handleBoxClick}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                <Form.Label>Attachment</Form.Label>\r\n                                <Form.Control type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n                            </Form.Group>\r\n\r\n                            <div className='d-flex justify-content-end'>\r\n                                <Button variant='secondary' onClick={handleSubmitClick} type='submit'>\r\n                                    Post {'>'}\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Card.Body>\r\n                    <Image src={url} />\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n"]},"metadata":{},"sourceType":"module"}